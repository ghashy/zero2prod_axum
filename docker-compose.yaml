# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  zero2prod:
    image: zero2prod:0.1
    ports:
      - 8000:8000
    secrets:
      - db-password
      - authorization_token
    environment:
      - TZ=Europe/Moscow
      - APP_PORT=8000
      - APP_ADDR=0.0.0.0
      - APP_BASE_URL=https://ghashy.ru
      - PG_DBNAME=newsletter
      - PG_HOST=db
      - PG_USER=postgres
      - PG_PASSWORD_FILE=/run/secrets/db-password
      - EMAIL_CLIENT_BASE_URL=https://api.smtp.bz
      - EMAIL_DELIVERY_SERVICE=smtp
      - SENDER_EMAIL=info@ghashy.ru
      - AUTHORIZATION_TOKEN_FILE=/run/secrets/authorization_token
# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=newsletter
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: secrets/db_password.txt
  authorization_token:
    file: secrets/authorization_token.txt
